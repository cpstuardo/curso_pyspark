{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOJebmccdTRAMoaAYpQNR2h"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["**Nota:** Los RDD son inmutables. Todas las transformaciones crean un nuevo RDD"],"metadata":{"id":"mlO7QscZawJU"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"LkmC1Tv9XXl9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678986282694,"user_tz":180,"elapsed":81356,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"08c9360f-bb34-4fae-de5e-2f31f378a43f"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m281.4/281.4 MB\u001b[0m \u001b[31m5.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m199.7/199.7 KB\u001b[0m \u001b[31m20.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Building wheel for pyspark (setup.py) ... \u001b[?25l\u001b[?25hdone\n"]}],"source":["# Instalar spark\n","!apt-get install openjdk-8-jdk-headless -qq > /dev/null\n","!wget -q https://archive.apache.org/dist/spark/spark-3.2.3/spark-3.2.3-bin-hadoop3.2.tgz\n","!tar xf spark-3.2.3-bin-hadoop3.2.tgz\n","import os\n","os.environ[\"JAVA_HOME\"] = \"/usr/lib/jvm/java-8-openjdk-amd64\"\n","os.environ[\"SPARK_HOME\"] = \"/content/spark-3.2.3-bin-hadoop3.2\"\n","!pip install -q findspark\n","!pip install -q pyspark"]},{"cell_type":"code","source":["import findspark\n","findspark.init()\n","from pyspark.sql import SparkSession\n","spark = SparkSession.builder.getOrCreate()\n","sc = spark.sparkContext\n","rdd = sc.parallelize([1,2,3,4,5])"],"metadata":{"id":"-mmu4tnQYDIa","executionInfo":{"status":"ok","timestamp":1678986295757,"user_tz":180,"elapsed":8039,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}}},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":["### Función Map"],"metadata":{"id":"t-3fndjTX29G"}},{"cell_type":"markdown","source":["Crea un nuevo RDD aplicando transformación a cada elemento de otro RDD."],"metadata":{"id":"CdnSRh-aZW-D"}},{"cell_type":"code","source":["rdd_resta = rdd.map(lambda x: x - 1)\n","rdd_resta.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gPXXm6UhYAQ7","executionInfo":{"status":"ok","timestamp":1678986381596,"user_tz":180,"elapsed":1896,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"66871874-6060-488d-b75e-1768c58c5217"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0, 1, 2, 3, 4]"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["rdd_par = rdd.map(lambda x: x % 2 == 0)\n","rdd_par.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dXHwi6UFYo_r","executionInfo":{"status":"ok","timestamp":1678986390649,"user_tz":180,"elapsed":2,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"816e523e-2405-4672-abd4-49508e4d422b"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[False, True, False, True, False]"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["rdd_texto = sc.parallelize(['jose', 'juan', 'lucia'])\n","rdd_mayuscula = rdd_texto.map(lambda x: x.upper())\n","rdd_mayuscula.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R79hcKZ0YszD","executionInfo":{"status":"ok","timestamp":1678986450174,"user_tz":180,"elapsed":376,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"b5eb253f-c275-4255-d167-6d5f42c10670"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['JOSE', 'JUAN', 'LUCIA']"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["rdd_hola = rdd_texto.map(lambda x: 'Hola ' + x)\n","rdd_hola.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8qlI9rjlYvBT","executionInfo":{"status":"ok","timestamp":1678986412220,"user_tz":180,"elapsed":234,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"0d27d00c-5964-48a5-eb84-b88cfe2d410d"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Hola jose', 'Hola juan', 'Hola lucia']"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["### Función flatMap"],"metadata":{"id":"Vl2h_QSiY4gj"}},{"cell_type":"markdown","source":["Funciona como Map, pero también aplana"],"metadata":{"id":"V7yWXHPPZkZz"}},{"cell_type":"code","source":["# Con Map retorna un lista con tuplas\n","rdd_cuadrado = rdd.map(lambda x: (x, x ** 2))\n","rdd_cuadrado.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fpMC4nrNY8TT","executionInfo":{"status":"ok","timestamp":1678986629206,"user_tz":180,"elapsed":434,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"25b10437-6455-4602-9d8d-58565b514da8"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(1, 1), (2, 4), (3, 9), (4, 16), (5, 25)]"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# Con flatMap retorna una lista plana\n","rdd_cuadrado_flat = rdd.flatMap(lambda x: (x, x ** 2))\n","rdd_cuadrado_flat.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IrE1ycfKZK_T","executionInfo":{"status":"ok","timestamp":1678986724661,"user_tz":180,"elapsed":1262,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"b5622c9f-48f3-46d1-e52f-aa6656f2ccef"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 1, 2, 4, 3, 9, 4, 16, 5, 25]"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["rdd_texto = sc.parallelize(['jose', 'juan', 'lucia'])\n","rdd_mayuscula = rdd_texto.flatMap(lambda x: (x, x.upper()))\n","rdd_mayuscula.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H-WzOl5OZMBc","executionInfo":{"status":"ok","timestamp":1678986639156,"user_tz":180,"elapsed":913,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"b089e690-e9d8-482a-b169-5a853b427527"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['jose', 'JOSE', 'juan', 'JUAN', 'lucia', 'LUCIA']"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["### Función filter"],"metadata":{"id":"RotB4jRVZeaM"}},{"cell_type":"markdown","source":["Crea un nuevo RDD filtrado."],"metadata":{"id":"LR1in51WasiT"}},{"cell_type":"code","source":["rdd = sc.parallelize([1,2,3,4,5,6,7,8,9])\n","rdd_par = rdd.filter(lambda x: x % 2 == 0)\n","rdd_par.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HM2uePBIZiBj","executionInfo":{"status":"ok","timestamp":1678986987041,"user_tz":180,"elapsed":268,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"dfe46ba3-714a-4257-ada8-adadc68b4485"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[2, 4, 6, 8]"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["rdd_impar = rdd.filter(lambda x: x % 2 != 0)\n","rdd_impar.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EkG0hRRSa8Wq","executionInfo":{"status":"ok","timestamp":1678987015522,"user_tz":180,"elapsed":288,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"40ffe03c-a323-4e70-f3c8-d48d83585011"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 3, 5, 7, 9]"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["rdd_texto = sc.parallelize(['jose', 'juaquin', 'juan', 'lucia', 'karla', 'katia'])\n","rdd_k = rdd_texto.filter(lambda x: x.startswith('k'))\n","rdd_k.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rkPe9cH4a_80","executionInfo":{"status":"ok","timestamp":1678987023726,"user_tz":180,"elapsed":388,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"160cb6d5-6aa9-4bb0-af7d-01f15039b644"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['karla', 'katia']"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# Filtrar las que comiencen con jota y la segunda letra sea una 'u'.\n","rdd_filtro = rdd_texto.filter(lambda x: x.startswith('j') and x.find('u') == 1)\n","rdd_filtro.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OXvefZCjbCEL","executionInfo":{"status":"ok","timestamp":1678987202760,"user_tz":180,"elapsed":239,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"c2b95d70-6d9f-4385-e307-ca4e1567cf85"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['juaquin', 'juan']"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["### Función coalesce"],"metadata":{"id":"tIwJQMTuaGqD"}},{"cell_type":"markdown","source":["Combina particiones de entrada en menos particiones de salida."],"metadata":{"id":"fMaajzVCcCVD"}},{"cell_type":"code","source":["rdd = sc.parallelize([1,2,3.4,5], 10)\n","rdd.getNumPartitions()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KvPD7IH6aKG1","executionInfo":{"status":"ok","timestamp":1678987152609,"user_tz":180,"elapsed":668,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"d4b4f785-c553-467b-b390-72d6e4a25779"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["# El rdd original mantiene las particiones\n","rdd.coalesce(5)\n","rdd.getNumPartitions()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ki3DhGitaKZ7","executionInfo":{"status":"ok","timestamp":1678987283465,"user_tz":180,"elapsed":275,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"ec75f48f-55f4-4775-a8e6-8e9ef34ab5d2"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["# El nuevo rdd reduce las particiones\n","rdd5 = rdd.coalesce(5)\n","rdd5.getNumPartitions()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UIgkDkATbmSz","executionInfo":{"status":"ok","timestamp":1678987293984,"user_tz":180,"elapsed":305,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"3098f986-5364-4021-8610-23335cacd4b5"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["### Función repartition"],"metadata":{"id":"AucjvcwkaK16"}},{"cell_type":"markdown","source":["Reparticiona las particiones de entrada en menos o más particiones de salida. La diferencia con coalesce es que esa solo se usa para reducir el número de particiones. Es una versión optimizada de repartition donde el movimiento de datos es menor. Sin embargo, ambas operaciones son costosas, entonces buscar reducir su uso."],"metadata":{"id":"CurINuQyco0d"}},{"cell_type":"code","source":["rdd = sc.parallelize([1,2,3,4,5], 3)\n","rdd.getNumPartitions()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nldS0eR4amaE","executionInfo":{"status":"ok","timestamp":1678987316684,"user_tz":180,"elapsed":472,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"e9a24f5e-8080-44ff-b8fe-28b7cf21005a"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["rdd7 = rdd.repartition(7)\n","rdd7.getNumPartitions()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dYZ1EmO8acJS","executionInfo":{"status":"ok","timestamp":1678987438285,"user_tz":180,"elapsed":365,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"3028887a-46d9-482e-85d2-fec4ecc50825"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["7"]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["### Función reduceByKey"],"metadata":{"id":"BUTyntnnaTzR"}},{"cell_type":"markdown","source":["Fusiona valores de cada clave usando una función asociativa de reducción"],"metadata":{"id":"CzDSircrdeZ8"}},{"cell_type":"code","source":["# RDD de tipo (llave, valor)\n","rdd = sc.parallelize(\n","    [('casa', 2),\n","     ('parque', 1),\n","     ('que', 5),\n","     ('casa', 1),\n","     ('escuela', 2),\n","     ('casa', 1),\n","     ('que', 1)]\n",")\n","rdd.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Uv3v-IV6aTnY","executionInfo":{"status":"ok","timestamp":1678987673125,"user_tz":180,"elapsed":276,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"933693a5-3397-40e6-858c-71af9b7ba8af"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('casa', 2),\n"," ('parque', 1),\n"," ('que', 5),\n"," ('casa', 1),\n"," ('escuela', 2),\n"," ('casa', 1),\n"," ('que', 1)]"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["# La función lambda recibe dos valores. Suma los valores de llaves repetidas\n","rdd_reduciodo = rdd.reduceByKey(lambda x,y: x + y)\n","rdd_reduciodo.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DUEh7WjuabGB","executionInfo":{"status":"ok","timestamp":1678987720407,"user_tz":180,"elapsed":1384,"user":{"displayName":"Carolina Stuardo Lobos","userId":"16139355256149783831"}},"outputId":"00f62453-e988-451c-ac20-9c032df0c7ca"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('parque', 1), ('que', 6), ('casa', 4), ('escuela', 2)]"]},"metadata":{},"execution_count":25}]}]}